{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\Scaffold\\\\Scaffold\\\\src\\\\JokeDisplay.js\";\nimport React from 'react';\n\n// This component handles displaying the joke or appropriate status messages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeDisplay = _ref => {\n  let {\n    loading,\n    error,\n    joke\n  } = _ref;\n  if (loading) {\n    // Use data-testid for loading state\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"loading-state\",\n      className: \"loading-status\",\n      \"aria-live\": \"polite\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    // Use data-testid for error state\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"error-state\",\n      className: \"error-status\",\n      \"aria-live\": \"assertive\",\n      children: \"Something went wrong...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  if (joke) {\n    // Use data-testid for joke content\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      \"data-testid\": \"joke-content\",\n      className: \"joke-content\",\n      \"aria-live\": \"polite\",\n      children: joke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Return an empty div with a data-testid when no content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"empty-state\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_c = JokeDisplay;\nexport default JokeDisplay;\nvar _c;\n$RefreshReg$(_c, \"JokeDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JokeDisplay","_ref","loading","error","joke","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/Scaffold/Scaffold/src/JokeDisplay.js"],"sourcesContent":["import React from 'react';\n\n// This component handles displaying the joke or appropriate status messages\nconst JokeDisplay = ({ loading, error, joke }) => {\n  if (loading) {\n    // Use data-testid for loading state\n    return <p data-testid=\"loading-state\" className=\"loading-status\" aria-live=\"polite\">Loading...</p>;\n  }\n  \n  if (error) {\n    // Use data-testid for error state\n    return <p data-testid=\"error-state\" className=\"error-status\" aria-live=\"assertive\">Something went wrong...</p>;\n  }\n  \n  if (joke) {\n    // Use data-testid for joke content\n    return <h2 data-testid=\"joke-content\" className=\"joke-content\" aria-live=\"polite\">{joke}</h2>;\n  }\n  \n  // Return an empty div with a data-testid when no content\n  return <div data-testid=\"empty-state\"></div>;\n};\n\nexport default JokeDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,IAAA,IAA8B;EAAA,IAA7B;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAC3C,IAAIC,OAAO,EAAE;IACX;IACA,oBAAOH,OAAA;MAAG,eAAY,eAAe;MAACM,SAAS,EAAC,gBAAgB;MAAC,aAAU,QAAQ;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpG;EAEA,IAAIP,KAAK,EAAE;IACT;IACA,oBAAOJ,OAAA;MAAG,eAAY,aAAa;MAACM,SAAS,EAAC,cAAc;MAAC,aAAU,WAAW;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChH;EAEA,IAAIN,IAAI,EAAE;IACR;IACA,oBAAOL,OAAA;MAAI,eAAY,cAAc;MAACM,SAAS,EAAC,cAAc;MAAC,aAAU,QAAQ;MAAAC,QAAA,EAAEF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/F;;EAEA;EACA,oBAAOX,OAAA;IAAK,eAAY;EAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9C,CAAC;AAACC,EAAA,GAlBIX,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}