{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\Scaffold\\\\Scaffold\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\n// import the custom hook to use in this document\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const url = \"https://v2.jokeapi.dev/joke/Programming?type=single\";\n  // Use the custom hook here\n  const {\n    data,\n    loading,\n    error,\n    getJoke\n  } = useFetch(url);\n\n  // Handle the New Joke button click\n  const handleNewJoke = () => {\n    getJoke();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    \"data-testid\": \"joke-app\",\n    role: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-testid\": \"app-heading\",\n        role: \"heading\",\n        \"aria-level\": \"1\",\n        children: \"Joke Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"joke-container\",\n        role: \"region\",\n        \"aria-live\": \"polite\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"loading-state\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"error-state\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Something went wrong...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), data && !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"joke-content\",\n          role: \"region\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.joke\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        \"data-testid\": \"new-joke-button\",\n        onClick: handleNewJoke,\n        role: \"button\",\n        children: \"New Joke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l+2eWgaH+RSHgSCzg/mcp6FQXL4=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useFetch","jsxDEV","_jsxDEV","App","_s","url","data","loading","error","getJoke","handleNewJoke","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","joke","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/Scaffold/Scaffold/src/App.js"],"sourcesContent":["import \"./styles.css\";\n// import the custom hook to use in this document\nimport useFetch from \"./useFetch\";\n\nexport default function App() {\n  const url = \"https://v2.jokeapi.dev/joke/Programming?type=single\";\n  // Use the custom hook here\n  const { data, loading, error, getJoke } = useFetch(url);\n\n  // Handle the New Joke button click\n  const handleNewJoke = () => {\n    getJoke();\n  };\n\n  return (\n    <div className=\"App\" data-testid=\"joke-app\" role=\"main\">\n      <header>\n        <h1 data-testid=\"app-heading\" role=\"heading\" aria-level=\"1\">Joke Generator</h1>\n      </header>\n      \n      <main>\n        <div data-testid=\"joke-container\" role=\"region\" aria-live=\"polite\">\n          {/* Use specific roles to make testing easier */}\n          {loading && <div data-testid=\"loading-state\" role=\"status\"><span>Loading...</span></div>}\n          {error && <div data-testid=\"error-state\" role=\"alert\"><span>Something went wrong...</span></div>}\n          {data && !loading && !error && <div data-testid=\"joke-content\" role=\"region\"><span>{data.joke}</span></div>}\n        </div>\n      </main>\n      \n      <footer>\n        <button \n          className=\"btn\" \n          data-testid=\"new-joke-button\"\n          onClick={handleNewJoke}\n          role=\"button\"\n        >\n          New Joke\n        </button>\n      </footer>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB;AACA,OAAOA,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,GAAG,GAAG,qDAAqD;EACjE;EACA,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGT,QAAQ,CAACK,GAAG,CAAC;;EAEvD;EACA,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BD,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAC,eAAY,UAAU;IAACC,IAAI,EAAC,MAAM;IAAAC,QAAA,gBACrDX,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAI,eAAY,aAAa;QAACU,IAAI,EAAC,SAAS;QAAC,cAAW,GAAG;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eAETf,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAK,eAAY,gBAAgB;QAACU,IAAI,EAAC,QAAQ;QAAC,aAAU,QAAQ;QAAAC,QAAA,GAE/DN,OAAO,iBAAIL,OAAA;UAAK,eAAY,eAAe;UAACU,IAAI,EAAC,QAAQ;UAAAC,QAAA,eAACX,OAAA;YAAAW,QAAA,EAAM;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvFT,KAAK,iBAAIN,OAAA;UAAK,eAAY,aAAa;UAACU,IAAI,EAAC,OAAO;UAAAC,QAAA,eAACX,OAAA;YAAAW,QAAA,EAAM;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC/FX,IAAI,IAAI,CAACC,OAAO,IAAI,CAACC,KAAK,iBAAIN,OAAA;UAAK,eAAY,cAAc;UAACU,IAAI,EAAC,QAAQ;UAAAC,QAAA,eAACX,OAAA;YAAAW,QAAA,EAAOP,IAAI,CAACY;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEPf,OAAA;MAAAW,QAAA,eACEX,OAAA;QACES,SAAS,EAAC,KAAK;QACf,eAAY,iBAAiB;QAC7BQ,OAAO,EAAET,aAAc;QACvBE,IAAI,EAAC,QAAQ;QAAAC,QAAA,EACd;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACb,EAAA,CArCuBD,GAAG;EAAA,QAGiBH,QAAQ;AAAA;AAAAoB,EAAA,GAH5BjB,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}