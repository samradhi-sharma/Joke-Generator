{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n// Custom hook for fetching jokes\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getJoke = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"HTTP error! Status: \".concat(response.status));\n      }\n      const jokeData = await response.json();\n      setData(jokeData);\n    } catch (err) {\n      setError(err.message || 'Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch a joke when the component mounts\n  useEffect(() => {\n    getJoke();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error,\n    getJoke\n  };\n};\n\n// Export the useFetch hook as a default export\n_s(useFetch, \"v5inua6mCP5CN8A+E7ULWpnNGvM=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","loading","setLoading","error","setError","getJoke","response","fetch","ok","Error","concat","status","jokeData","json","err","message"],"sources":["C:/Users/LENOVO/Downloads/Scaffold/Scaffold/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// Custom hook for fetching jokes\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getJoke = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      \r\n      const jokeData = await response.json();\r\n      setData(jokeData);\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch a joke when the component mounts\r\n  useEffect(() => {\r\n    getJoke();\r\n  }, [url]);\r\n\r\n  return { data, loading, error, getJoke };\r\n};\r\n\r\n// Export the useFetch hook as a default export\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;MAEjC,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,wBAAAC,MAAA,CAAwBJ,QAAQ,CAACK,MAAM,CAAE,CAAC;MAC3D;MAEA,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACtCb,OAAO,CAACY,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZV,QAAQ,CAACU,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;IACjD,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IACdU,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAQ,CAAC;AAC1C,CAAC;;AAED;AAAAP,EAAA,CAjCMF,QAAQ;AAkCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}